---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ShareButtons from '../../components/ShareButtons.astro';
import type { CollectionEntry } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get the full URL for sharing
const canonicalURL = new URL(Astro.url.pathname, import.meta.env.SITE ?? 'https://veblabs.com').toString();
---

<Layout 
  title={`${post.data.title} | Blog`}
  description={post.data.excerpt}
  image={post.data.image}
>
  <div class="container mx-auto px-4 py-16">
    <article class="max-w-4xl mx-auto">
      <header class="mb-8">
        <div class="flex items-center gap-4 mb-4">
          <span class="px-4 py-1.5 bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 rounded-full text-sm font-medium">
            {post.data.category}
          </span>
        </div>
        <h1 class="text-4xl font-bold mb-4">{post.data.title}</h1>
        <div class="flex items-center text-gray-600 dark:text-gray-400 mb-4">
          <span>{post.data.author}</span>
          <span class="mx-2">â€¢</span>
          <time>{post.data.date}</time>
        </div>
        {post.data.image && (
          <img
            src={post.data.image}
            alt={post.data.title}
            class="w-full h-[400px] object-cover rounded-lg mb-8"
          />
        )}
      </header>
      
      <div class="prose dark:prose-invert prose-lg mx-auto">
        <Content />
      </div>

      <ShareButtons 
        url={canonicalURL}
        title={post.data.title}
        description={post.data.excerpt || `Read ${post.data.title} on Veblabs`}
      />
    </article>
  </div>
</Layout>
