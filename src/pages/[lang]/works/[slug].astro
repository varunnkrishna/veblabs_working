---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import ProjectHeader from '../../../components/ProjectHeader.astro';
import type { CollectionEntry } from 'astro:content';
import ProjectGallery from '../../../components/ProjectGallery.astro';
import { supportedLanguages } from '../../../i18n/config';
import { useTranslations } from '../../../i18n/utils';
import Button from '../../../components/Button.astro';
import LanguageNotice from '../../../components/LanguageNotice.astro';

export const prerender = true;

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return Object.keys(supportedLanguages).flatMap(lang => 
    projects.map((project: CollectionEntry<'projects'>) => ({
      params: { lang, slug: project.slug },
      props: { project },
    }))
  );
}

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const { lang } = Astro.params;
const t = useTranslations(lang as keyof typeof supportedLanguages);
const navT = await t('nav');
const footerT = await t('footer');
const commonT = await t('common');
const projectsT = await t('projects');
const { Content } = await project.render();

// Get translated project data
const translatedProject = projectsT.projects[project.slug as keyof typeof projectsT.projects] || project.data;
const title = translatedProject.title || project.data.title;
const description = translatedProject.description || project.data.description;

---

<Layout 
  title={`${title} | ${navT.works} | Veblabs`}
  description={description}
>
  <ProjectHeader project={project.data} />
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    {/* Language Notice for Arabic Users */}
    {lang === 'ar' && (
      <LanguageNotice 
        title={commonT.languageNotice.title}
        message={commonT.languageNotice.message}
      />
    )}
    
    {/* Project Overview Section */}
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 mb-16">
      {/* Main Content */}
      <div class="lg:col-span-2 space-y-8">
        <div class="prose dark:prose-invert max-w-none">
          <Content />
        </div>
      </div>

      {/* Project Details Sidebar */}
      <div class="lg:col-span-1 space-y-8">
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Project Details</h3>
          <dl class="space-y-4">
            <div>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Client</dt>
              <dd class="mt-1 text-sm text-gray-900 dark:text-white">{project.data.client}</dd>
            </div>
            <div>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Category</dt>
              <dd class="mt-1">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                  {project.data.category}
                </span>
              </dd>
            </div>
            {project.data.tags && (
              <div>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Technologies</dt>
                <dd class="flex flex-wrap gap-2">
                  {project.data.tags.map((tag: string) => (
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200">
                      {tag}
                    </span>
                  ))}
                </dd>
              </div>
            )}
          </dl>
        </div>

        {/* Sticky CTA Section */}
        <div class="sticky top-24 mt-8">
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-6 shadow-sm border border-blue-100 dark:border-blue-800">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">{commonT.ctaBanner.title}</h3>
            <p class="text-sm text-gray-600 dark:text-gray-300 mb-6">{commonT.ctaBanner.description}</p>
            <Button
              href={`/${lang}/get-in-touch`}
              variant="primary"
              text={footerT.contact.title}
            />
          </div>
        </div>
      </div>
    </div>

    {/* Project Gallery Section */}
    {project.data.gallery && project.data.gallery.length > 0 && (
      <div class="border-t border-gray-200 dark:border-gray-700 pt-16">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-8">Project Gallery</h2>
        <ProjectGallery 
          images={project.data.gallery.map((img: { url: string; alt?: string; caption?: string }) => ({
            url: img.url,
            alt: img.alt || img.caption || project.data.title,
            caption: img.caption
          }))}
        />
      </div>
    )}

    {/* Project Tags Section */}
    {project.data.tags && project.data.tags.length > 0 && (
      <div class="border-t border-gray-200 dark:border-gray-700 pt-16">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-8">Technologies Used</h2>
        <div class="flex flex-wrap gap-4">
          {project.data.tags.map((tag: string) => (
            <span class="px-4 py-2 rounded-full text-sm font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400">
              {tag}
            </span>
          ))}
        </div>
      </div>
    )}

    {/* Back to Projects Button */}
    <div class="mt-16 flex justify-center">
      <Button
        href={`/${lang}/works`}
        variant="secondary"
        text={`← ${navT.works}`}
      />
    </div>

    {/* Call to Action Section */}
    <div class="mt-16 border-t border-gray-200 dark:border-gray-700 pt-16 text-center">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">Ready to Start Your Project?</h2>
      <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">Let's discuss how we can help bring your vision to life.</p>
      <a 
        href={`/${lang}/get-in-touch`}
        class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 shadow-lg hover:shadow-xl transition-all duration-300"
      >
        Get in Touch
        <svg class="ml-2 -mr-1 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</Layout>
