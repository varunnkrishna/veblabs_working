---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import Ctaone from '../../components/Ctaone.astro';
import TestimonialMarquee from '../../components/TestimonialMarquee.astro';
const projects = await getCollection('projects');
const categories = [...new Set(projects.map(project => project.data.category))];
---

<Layout title="Our Works | Veblabs">
  {/* Hero Section */}
  <div class="relative bg-gradient-to-b from-blue-50 to-white dark:from-gray-900 dark:to-gray-800 overflow-hidden">
    <div class="absolute inset-0">
      <div class="absolute inset-0 bg-[url('/images/grid.svg')] opacity-10"></div>
      <div class="absolute inset-0 bg-gradient-to-b from-blue-500/10 to-purple-500/10 dark:from-blue-500/20 dark:to-purple-500/20"></div>
    </div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24">
      <div class="text-center max-w-3xl mx-auto">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 mb-6">
          Our Portfolio
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300 mb-8">
          Explore our diverse collection of successful projects that showcase our expertise in creating impactful digital solutions.
        </p>
        <div class="flex flex-wrap justify-center gap-4">
          <button 
            class="category-filter px-6 py-2 rounded-full bg-blue-500 text-white dark:bg-blue-600 hover:bg-blue-600 dark:hover:bg-blue-700 transition-all duration-300 shadow-md hover:shadow-lg whitespace-nowrap active"
            data-category="all"
          >
            All Projects
          </button>
          {categories.map(category => (
            <button 
              class="category-filter px-6 py-2 rounded-full bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-blue-500 hover:text-white dark:hover:bg-blue-600 transition-all duration-300 shadow-md hover:shadow-lg whitespace-nowrap"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>
    </div>
  </div>

  {/* Projects Grid */}
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {projects.map(project => (
        <a href={`/works/${project.slug}`} class="project-item group" data-category={project.data.category}>
          <article class="bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
            <div class="aspect-[16/10] relative overflow-hidden">
              <img
                src={project.data.image}
                alt={project.data.title}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500">
                <div class="absolute bottom-0 left-0 right-0 p-8">
                  <span class="inline-block px-4 py-2 bg-white/90 dark:bg-gray-900/90 text-gray-900 dark:text-white rounded-full text-sm font-medium mb-4">
                    {project.data.category}
                  </span>
                  <h2 class="text-3xl font-bold text-white mb-3">{project.data.title}</h2>
                  <p class="text-gray-200 text-base line-clamp-3">
                    {project.data.description}
                  </p>
                </div>
              </div>
            </div>
          </article>
        </a>
      ))}
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const filterButtons = document.querySelectorAll('.category-filter');
      const projectItems = document.querySelectorAll('.project-item');
      
      filterButtons.forEach((button: Element) => {
        button.addEventListener('click', () => {
          // Update active button styles
          filterButtons.forEach((btn: Element) => {
            btn.classList.remove('active', 'bg-blue-500', 'text-white');
            if (!btn.classList.contains('active')) {
              btn.classList.add('bg-white', 'text-gray-700');
            }
          });
          button.classList.add('active', 'bg-blue-500', 'text-white');
          button.classList.remove('bg-white', 'text-gray-700');

          const selectedCategory = (button as HTMLElement).dataset.category;
          
          projectItems.forEach((item: Element) => {
            const htmlItem = item as HTMLElement;
            if (selectedCategory === 'all') {
              htmlItem.style.display = '';
              return;
            }
            
            const projectCategory = htmlItem.dataset.category;
            htmlItem.style.display = projectCategory === selectedCategory ? '' : 'none';
          });
        });
      });
    });
  </script>

  <TestimonialMarquee :visible/>
  {/* CTA Banner */}
  <Ctaone/>
</Layout>