---
import Badge from "./Badge.astro";
import Button from "./Button.astro"; // Import the Button component
import { getLanguageFromURL, useTranslations, getLanguageDirection } from '../i18n/utils';

const lang = getLanguageFromURL(Astro.url.pathname);
const t = useTranslations(lang);
const translations = await t('comparison');
const isRTL = getLanguageDirection(lang) === 'rtl';

const comparisonData = [
  {
    feature: translations?.features.multilingualExpertise || "Multilingual Expertise",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false",
  },
  {
    feature: translations?.features.revenueDrivenDesign || "Revenue-Driven Design",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false",
  },
  {
    feature: translations?.features.tailoredSolutions || "Tailored Solutions",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false",
  },
  {
    feature: translations?.features.dedicatedSupport || "Dedicated Support",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "variable",
  },
  {
    feature: translations?.features.cuttingEdgeTools || "Cutting-Edge Tools",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false",
  },
  {
    feature: translations?.features.scalableServices || "Scalable Services",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "variable",
  },
  {
    feature: translations?.features.regionalKnowledge || "Regional Knowledge",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false",
  },
];

// Helper function to render the status icon
const getStatusIcon = (status: string) => {
  if (status === "true") {
    return `<span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-green-100 dark:bg-green-900/30 text-green-500 dark:text-green-400 transform hover:scale-110 transition-transform duration-200">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
      </svg>
    </span>`;
  } else if (status === "false") {
    return `<span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-red-100 dark:bg-red-900/30 text-red-500 dark:text-red-400">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
      </svg>
    </span>`;
  }
  return `<span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-yellow-100 dark:bg-yellow-900/30 text-yellow-500 dark:text-yellow-400">
    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/>
    </svg>
  </span>`;
};
---

<section class="py-20 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900">
  <div class={`container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl ${isRTL ? 'rtl' : ''}`}>
    <div class="text-center mb-12">
      <Badge text={translations?.badge || "Our Advantage"} />
      <h2 class="text-4xl md:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 mb-4">
        {translations?.title || "Why Choose VebLabs?"}
      </h2>
      <p class="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        {translations?.description || "Compare our comprehensive solutions with other options and see why we're the perfect choice for your business"}
      </p>
    </div>
    
    <div class="overflow-hidden rounded-xl shadow-lg transform hover:scale-[1.02] transition-all duration-300">
      <div class="overflow-x-auto bg-white dark:bg-gray-800 bg-opacity-80 dark:bg-opacity-80 backdrop-blur-sm">
        <table class="table-auto w-full">
          <thead>
            <tr class="bg-gradient-to-r from-blue-500/10 to-purple-500/10 dark:from-blue-500/20 dark:to-purple-500/20">
              {isRTL ? (
                <>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.typicalAgency || "Typical Agency"}
                  </th>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.inHouse || "In-House Team"}
                  </th>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.vebLabs || "VebLabs"}
                  </th>
                  <th class="p-5 font-bold text-gray-800 dark:text-gray-100 text-right">
                    {translations?.columnHeaders.feature || "Feature"}
                  </th>
                </>
              ) : (
                <>
                  <th class="p-5 text-left font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.feature || "Feature"}
                  </th>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.vebLabs || "VebLabs"}
                  </th>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.inHouse || "In-House Team"}
                  </th>
                  <th class="p-5 text-center font-bold text-gray-800 dark:text-gray-100">
                    {translations?.columnHeaders.typicalAgency || "Typical Agency"}
                  </th>
                </>
              )}
            </tr>
          </thead>
          <tbody>
            {comparisonData.map((row) => (
              <tr class="border-t border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors duration-150">
                {isRTL ? (
                  <>
                    <td class="p-5 text-center" set:html={getStatusIcon(row.typicalAgency)} />
                    <td class="p-5 text-center" set:html={getStatusIcon(row.inHouse)} />
                    <td class="p-5 text-center" set:html={getStatusIcon(row.vebLabs)} />
                    <td class="p-5 text-gray-800 dark:text-gray-200 font-medium text-right">{row.feature}</td>
                  </>
                ) : (
                  <>
                    <td class="p-5 text-gray-800 dark:text-gray-200 font-medium text-left">{row.feature}</td>
                    <td class="p-5 text-center" set:html={getStatusIcon(row.vebLabs)} />
                    <td class="p-5 text-center" set:html={getStatusIcon(row.inHouse)} />
                    <td class="p-5 text-center" set:html={getStatusIcon(row.typicalAgency)} />
                  </>
                )}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
    <div class="mt-12 text-center reveal-on-scroll">
      <Button
        href={`/${lang}/contact`}
        variant="primary"
        text={translations.cta}
      />
    </div>
  </div>
</section>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  section {
    animation: fadeIn 0.8s ease-out forwards;
  }

  .table-auto {
    animation: fadeIn 1s ease-out 0.2s forwards;
  }
</style>