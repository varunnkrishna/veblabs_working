---
import Badge from "./Badge.astro";
import Button from "./Button.astro";
import { getLanguageFromURL, useTranslations, getLanguageDirection } from '../i18n/utils';

const lang = getLanguageFromURL(Astro.url.pathname);
const t = useTranslations(lang);
const translations = await t('comparison');
const isRTL = getLanguageDirection(lang) === 'rtl';

const comparisonData = [
  {
    feature: translations?.features.multilingualExpertise || "Quick Turnaround (24-48 hrs)",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false"
  },
  {
    feature: translations?.features.revenueDrivenDesign || "Bug Fixing Specialists",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false"
  },
  {
    feature: translations?.features.tailoredSolutions || "Cross-Platform Support",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "true"
  },
  {
    feature: translations?.features.dedicatedSupport || "Root Cause Analysis",
    vebLabs: "true",
    inHouse: "true",
    typicalAgency: "false"
  },
  {
    feature: translations?.features.cuttingEdgeTools || "Detailed Documentation",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false"
  },
  {
    feature: translations?.features.scalableServices || "30-Day Fix Warranty",
    vebLabs: "true",
    inHouse: "false",
    typicalAgency: "false"
  },
  {
    feature: translations?.features.regionalKnowledge || "24/7 Priority Support",
    vebLabs: "true",
    inHouse: "true",
    typicalAgency: "false"
  }
];

// Helper function to render the status icon
const getStatusIcon = (status: string) => {
  if (status === "true") {
    return "✅";
  } else if (status === "false") {
    return "❌";
  }
  return "❓";
};

---

<section class="py-20 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900">
  <div class={`container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl ${isRTL ? 'rtl' : ''}`}>
    <div class="text-center mb-12">
      <Badge text={translations?.badge || "Our Advantage"} />
      <h2 class="text-4xl md:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 mb-4">
        {translations?.title || "Why Choose Our Bug Fixing Service?"}
      </h2>
      <p class="text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto">
        {translations?.description || "Compare our specialized bug fixing solutions with other options and see why we're the perfect choice for your software issues"}
      </p>
    </div>

    <div class="overflow-x-auto">
      <table class="w-full border-collapse">
        <thead>
          <tr class="border-b-2 border-gray-200 dark:border-gray-700">
            <th class="py-4 px-6 text-left">{translations?.columnHeaders.feature || "Feature"}</th>
            <th class="py-4 px-6 text-center">{translations?.columnHeaders.vebLabs || "Our Bug Fixing Service"}</th>
            <th class="py-4 px-6 text-center">{translations?.columnHeaders.inHouse || "In-House Debugging"}</th>
            <th class="py-4 px-6 text-center">{translations?.columnHeaders.typicalAgency || "General Dev Agency"}</th>
          </tr>
        </thead>
        <tbody>
          {comparisonData.map((item, index) => (
            <tr class={`border-b border-gray-200 dark:border-gray-700 ${index % 2 === 0 ? 'bg-gray-50 dark:bg-gray-800/50' : ''}`}>
              <td class="py-4 px-6">{item.feature}</td>
              <td class="py-4 px-6 text-center text-xl">{getStatusIcon(item.vebLabs)}</td>
              <td class="py-4 px-6 text-center text-xl">{getStatusIcon(item.inHouse)}</td>
              <td class="py-4 px-6 text-center text-xl">{getStatusIcon(item.typicalAgency)}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <div class="mt-12 text-center">
      <Button 
        text={translations?.cta || "Fix Your Bugs Now"}
        variant="primary"
        href="#contact"
      />
    </div>
  </div>
</section>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  section {
    animation: fadeIn 0.8s ease-out forwards;
  }

  .table-auto {
    animation: fadeIn 1s ease-out 0.2s forwards;
  }
</style>