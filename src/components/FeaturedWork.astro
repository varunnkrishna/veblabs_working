---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Badge from './Badge.astro';
import { useTranslations, getLanguageDirection } from "../i18n/utils";

const { lang = "en" } = Astro.props;
const t = await useTranslations(lang);
const translations = await t('ourwork');
const projectTranslations = await t('projects');
const isRTL = getLanguageDirection(lang) === 'rtl';

const allProjects = await getCollection('projects');
// Only get the first 3 projects
const projects = allProjects.slice(0, 3);

interface Props {
  lang?: "en" | "ar";
}

// Helper function to get project translations
function getProjectTranslations(project: CollectionEntry<'projects'>) {
  // Remove .md extension and use the filename as the key
  const key = project.id.replace(/\.md$/, '');
  return projectTranslations.projects[key] || project.data;
}

---

<section class="relative py-24 font-inter overflow-hidden" dir={isRTL ? 'rtl' : 'ltr'}>
  {/* Background Pattern and Gradient */}
  <div class="absolute inset-0 bg-gradient-to-br from-blue-50 via-purple-50 to-white dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
    <div class="absolute inset-0 bg-[url('/images/grid.svg')] opacity-10"></div>
    <div class="absolute inset-0 bg-gradient-to-t from-transparent via-transparent to-white/30 dark:to-black/30"></div>
  </div>

  {/* Decorative Elements */}
  <div class="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
    <div class="absolute -top-1/2 left-1/2 transform -translate-x-1/2 w-[1000px] h-[1000px] rounded-full bg-gradient-to-br from-blue-400/20 to-purple-400/20 dark:from-blue-500/10 dark:to-purple-500/10 blur-3xl"></div>
    <div class="absolute top-1/2 left-1/4 w-[300px] h-[300px] rounded-full bg-gradient-to-br from-blue-300/20 to-purple-300/20 dark:from-blue-400/10 dark:to-purple-400/10 blur-2xl"></div>
    <div class="absolute top-1/3 right-1/4 w-[250px] h-[250px] rounded-full bg-gradient-to-br from-purple-300/20 to-blue-300/20 dark:from-purple-400/10 dark:to-blue-400/10 blur-2xl"></div>
  </div>

  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <Badge text={translations.badge} />
      <h2 class="text-4xl md:text-5xl font-bold text-center mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400">
        {translations.title}
      </h2>
      <p class="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto text-lg">
        {translations.description}
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {projects?.map((project: CollectionEntry<'projects'>, index: number) => (
        <div class="group relative overflow-hidden rounded-2xl transform transition-all duration-500 hover:scale-[1.02]">
          <div class="relative aspect-[16/9] overflow-hidden">
            <img
              src={project.data.image}
              alt={project.data.title}
              class="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            
            {/* Category Badge */}
            <div class={`absolute top-4 ${isRTL ? 'right-4' : 'left-4'}`}>
              <span class="px-4 py-2 rounded-full text-sm font-medium bg-white/90 dark:bg-gray-800/90 text-gray-800 dark:text-white backdrop-blur-sm">
                {project.data.category}
              </span>
            </div>

            {/* Project Info Overlay */}
            <div class="absolute inset-0 flex flex-col justify-end p-6 translate-y-4 opacity-0 group-hover:translate-y-0 group-hover:opacity-100 transition-all duration-500">
              <h3 class="text-2xl font-bold text-white mb-2">
                {project.data.title}
              </h3>
              <p class="text-gray-200 text-sm mb-4 line-clamp-2">
                {project.data.description}
              </p>
              <div class="flex flex-wrap gap-2">
                {project.data.tags?.map((tag: string) => (
                  <span class="px-3 py-1 rounded-full text-xs font-medium bg-white/20 text-white backdrop-blur-sm">
                    {tag}
                  </span>
                ))}
              </div>
            </div>

            {/* View Project Button */}
            <a
              href={`/${lang}/works/${project.id.replace(/\.md$/, '')}`}
              class={`absolute bottom-6 ${isRTL ? 'left-6' : 'right-6'} px-4 py-2 rounded-lg bg-white/90 dark:bg-gray-800/90 text-gray-800 dark:text-white text-sm font-medium backdrop-blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-500`}
            >
              {translations.viewProject}
            </a>
          </div>
        </div>
      ))}
    </div>
    
    {/* View All Projects Button */}
    <div class="text-center mt-12">
      <a
        href={`/${lang}/works`}
        class="inline-block px-6 py-3 rounded-lg bg-gradient-to-r from-blue-600 to-purple-600 text-white font-medium hover:from-blue-700 hover:to-purple-700 transition-colors duration-300"
      >
        {translations.all_projects}
      </a>
    </div>
  </div>
</section>
