---
import { useTranslations, getLanguageDirection } from "../i18n/utils";

interface Props {
  projectId: string;
  image: string;
  gallery?: {
    url: string;
    alt: string;
    caption: string;
  }[];
  slug: string;
  lang: "en" | "ar";
}

const { projectId, image, gallery, slug, lang } = Astro.props;
const t = await useTranslations(lang);
const translations = await t('projects');
const isRTL = getLanguageDirection(lang) === 'rtl';

const project = translations.projects[projectId];
---

<article class="group relative overflow-hidden rounded-lg shadow-lg bg-white dark:bg-gray-800 transition-all duration-300 hover:shadow-xl" dir={isRTL ? 'rtl' : 'ltr'}>
  <a href={`/${lang}/projects/${slug}`} class="block">
    <div class="relative h-64 overflow-hidden">
      <img
        src={image}
        alt={project.title}
        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
      <span class={`absolute top-4 ${isRTL ? 'left-4' : 'right-4'} px-3 py-1 bg-primary text-white text-sm font-medium rounded-full`}>
        {project.category}
      </span>
    </div>

    <div class="p-6 space-y-4">
      {/* Header */}
      <div>
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">{project.title}</h3>
        <p class="text-gray-600 dark:text-gray-400">{project.description}</p>
      </div>

      {/* Client */}
      <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
        <i class={`fas fa-building ${isRTL ? 'ml-2' : 'mr-2'}`}></i>
        <span>{project.client}</span>
      </div>

      {/* Key Results */}
      {project.results && project.results.length > 0 && (
        <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
          <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-3">{translations.keyResults}</h4>
          <ul class="space-y-2">
            {project.results.slice(0, 2).map((result) => (
              <li class="flex items-start">
                <i class={`fas fa-check-circle text-green-500 mt-1 ${isRTL ? 'ml-2' : 'mr-2'}`}></i>
                <span class="text-sm text-gray-600 dark:text-gray-400">{result}</span>
              </li>
            ))}
          </ul>
        </div>
      )}

      {/* Gallery Preview */}
      {gallery && gallery.length > 0 && (
        <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
          <div class={`flex ${isRTL ? 'space-x-reverse' : 'space-x-2'} overflow-x-auto`}>
            {gallery.slice(0, 3).map((item) => (
              <div class="flex-none w-20 h-20 rounded-lg overflow-hidden">
                <img
                  src={item.url}
                  alt={item.alt}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              </div>
            ))}
          </div>
        </div>
      )}
    </div>

    {/* View Project Button */}
    <div class="px-6 pb-6">
      <div class={`inline-flex items-center text-primary dark:text-primary-400 font-medium group-hover:text-primary-600 dark:group-hover:text-primary-300 transition-colors ${isRTL ? 'flex-row-reverse' : ''}`}>
        <span>{translations.viewProject}</span>
        <i class={`fas fa-arrow-${isRTL ? 'left' : 'right'} ${isRTL ? 'mr-2 group-hover:-translate-x-1' : 'ml-2 group-hover:translate-x-1'} transform transition-transform`}></i>
      </div>
    </div>
  </a>
</article>