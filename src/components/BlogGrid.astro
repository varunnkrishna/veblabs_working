---
import { format } from 'date-fns';
import BlogCard from './BlogCard.astro';

interface Props {
  posts: any[];
  lang: string;
}

const { posts = [], lang } = Astro.props;
const sortedPosts = posts.length > 0 ? posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()) : [];
const featuredPost = sortedPosts[0];
const regularPosts = sortedPosts.slice(1);
---

{posts.length === 0 ? (
  <div class="text-center py-16">
    <h3 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">No posts found</h3>
    <p class="text-gray-600 dark:text-gray-400">Check back later for new content!</p>
  </div>
) : (
  <div class="space-y-16 container mx-auto px-4 md:px-6 py-16">
    {featuredPost && (
      <div class="blog-post" data-category={featuredPost.data.category}>
        <a href={`/${lang}/blog/${featuredPost.slug}`} class="block group">
          <article class="grid md:grid-cols-2 gap-8 bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300">
            <div class="aspect-[16/10] relative overflow-hidden">
              <img
                src={featuredPost.data.image}
                alt={featuredPost.data.title}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
              />
            </div>
            
            <div class="p-8 flex flex-col justify-center">
              <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-4">
                <span>{format(new Date(featuredPost.data.date), 'MMM dd, yyyy')}</span>
                <span class="w-1 h-1 rounded-full bg-blue-500"></span>
                <span>{featuredPost.data.author}</span>
              </div>
              
              <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-4 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                {featuredPost.data.title}
              </h2>
              
              <p class="text-gray-600 dark:text-gray-400 mb-6 line-clamp-3">
                {featuredPost.data.excerpt}
              </p>
              
              <span class="inline-block px-4 py-1.5 bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 rounded-full text-sm font-medium">
                {featuredPost.data.category}
              </span>
            </div>
          </article>
        </a>
      </div>
    )}

    {regularPosts.length > 0 && (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {regularPosts.map((post) => (
          <div class="blog-post" data-category={post.data.category}>
            <BlogCard post={post} lang={lang} />
          </div>
        ))}
      </div>
    )}
  </div>
)}