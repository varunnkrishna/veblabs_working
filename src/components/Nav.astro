---
const navItems = [
  { href: '/works', label: 'Works' },
  { href: '/blog', label: 'Blog' },
  { href: '/services', label: 'Services' },
  { href: '/about', label: 'About Us' },
  { href: '/contact', label: 'Contact' },
];
---
<header class="fixed w-full bg-white/80 dark:bg-gray-900 backdrop-blur-lg  shadow-lg z-50">
<div class="container mx-auto px-4 py-4 flex items-center justify-between">
      <div class="flex-1">
        <a href="/" class="text-2xl font-bold text-blue-400">veb<span class="dark:text-white text-black">Labs</span></a>
      </div>
  
      <!-- Hamburger Menu -->
      <button id="menu-toggle" class="md:hidden text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5m-16.5 5.25h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
  
      <!-- Navigation Links -->
      <nav id="menu" class="hidden md:flex flex-1 justify-center space-x-6">
        <ul class="flex flex-col md:flex-row md:space-x-6">
          {navItems.map(item => (
            <li class="my-2 md:my-0">
              <a href={item.href} class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors">
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
  
      <div class="flex-1 flex justify-end space-x-4">
        <label class="inline-flex items-center cursor-pointer">
          <input
            id="theme-toggle-checkbox"
            type="checkbox"
            value=""
            class="sr-only peer"
            aria-label="Toggle dark mode"
          />
          <div
            class="relative w-9 h-5 bg-gray-200 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
          ></div>
        </label>
  
        <a href="/contact" class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors">
          Get in Touch
        </a>
      </div>
    </div>
  </header>
  
  <script>
    // Cast to HTMLInputElement to access the `checked` property
    const themeToggleCheckbox = document.getElementById('theme-toggle-checkbox') as HTMLInputElement;
    const menuToggle = document.getElementById('menu-toggle') as HTMLElement;
    const menu = document.getElementById('menu') as HTMLElement;
  
    // Initialize theme
    if (
      localStorage.getItem('theme') === 'dark' ||
      (!localStorage.getItem('theme') &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark');
      themeToggleCheckbox.checked = true; // Ensure the toggle is checked for dark mode
    } else {
      document.documentElement.classList.remove('dark');
      themeToggleCheckbox.checked = false; // Ensure the toggle is unchecked for light mode
    }
  
    // Toggle theme
    themeToggleCheckbox.addEventListener('change', () => {
      if (themeToggleCheckbox.checked) {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      } else {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      }
    });
  
    // Toggle menu visibility
    menuToggle.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });
  </script>
  
  
  