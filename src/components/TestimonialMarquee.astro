---
import { getCollection } from 'astro:content';
import Badge from '../components/Badge.astro';

const testimonials = await getCollection('testimonials');
const duplicatedTestimonials = [...testimonials, ...testimonials,...testimonials]; // Duplicate for seamless loop
---

<section title="Testimonials" class="bg-blue-950/5 dark:bg-blue-950/50 py-24 font-inter">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="text-center mb-16">
      <Badge text="Client Testimonials" />
      <h1 class="text-4xl md:text-5xl font-bold text-center mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 leading-tight tracking-tight">
        What Our Clients Say
      </h1>
      <p class="text-center text-gray-600 dark:text-gray-300 max-w-2xl mx-auto mb-4 text-lg font-medium tracking-normal">
        Don't just take our word for it. Here's what our amazing clients have to say about their experience working with us.
      </p>
    </div>
  </div>

  <div class="testimonials-container overflow-hidden">
    <div class="marquee-wrapper relative mb-16">
      <div class="marquee flex gap-8" data-speed="1">
        {duplicatedTestimonials.map((testimonial) => (
          <div class="testimonial-card flex-shrink-0 w-[400px] p-8 rounded-2xl bg-white/90 dark:bg-gray-800/90 shadow-[0_15px_40px_-15px_rgba(0,0,0,0.1)] dark:shadow-[0_15px_40px_-15px_rgba(0,0,0,0.2)] backdrop-blur-sm transform hover:scale-[1.02] transition-all duration-300 border border-gray-100/20 dark:border-gray-700/20">
            <div class="flex items-center gap-4 mb-6">
              <div class="w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-500 flex items-center justify-center text-white font-bold text-xl">
                {testimonial.data.author && testimonial.data.author.charAt(0)}
              </div>
              <div>
                <h3 class="font-semibold text-gray-900 dark:text-white">
                  {testimonial.data.author}
                </h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  {testimonial.data.role} Â· {testimonial.data.company}
                </p>
              </div>
            </div>
            <div class="relative">
              <svg class="absolute -top-3 -left-2 w-8 h-8 text-gray-200 dark:text-gray-700" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 14">
                <path d="M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z"/>
              </svg>
              <p class="text-gray-600 dark:text-gray-300 leading-relaxed tracking-normal relative z-10 pl-7">
                {testimonial.data.testimonial}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
import { gsap } from 'gsap';

// Marquee animation
function initMarquee() {
  const marqueeElements = document.querySelectorAll('.marquee');
  
  marqueeElements.forEach((el) => {
    const element = el as HTMLElement;
    const speed = Number(element.dataset.speed) || 1;
    const marqueeWidth = element.offsetWidth;
    
    gsap.to(element, {
      x: -marqueeWidth / 2,
      duration: 20 / speed,
      ease: "none",
      repeat: -1
    });
  });
}

// Initialize animations when the page loads
window.addEventListener('load', initMarquee);
</script>

<style>
  .testimonial-card {
    transition: all 0.3s ease;
  }

  .testimonial-card:hover {
    transform: translateY(-5px);
  }

  .marquee-wrapper::before,
  .marquee-wrapper::after {
    content: "";
    position: absolute;
    top: 0;
    width: 250px;
    height: 100%;
    z-index: 2;
  }

  .marquee-wrapper::before {
    left: 0;
    background: linear-gradient(to right, rgb(249 250 251 / 1), transparent);
  }

  .marquee-wrapper::after {
    right: 0;
    background: linear-gradient(to left, rgb(249 250 251 / 1), transparent);
  }

  :global(.dark) .marquee-wrapper::before {
    background: linear-gradient(to right, rgb(17 24 39 / 1), transparent);
  }

  :global(.dark) .marquee-wrapper::after {
    background: linear-gradient(to left, rgb(17 24 39 / 1), transparent);
  }
</style>