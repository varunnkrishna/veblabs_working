---
import { z } from 'zod';

const contactSchema = z.object({
  name: z.string().min(2, { message: "Name must be at least 2 characters" }),
  email: z.string().email({ message: "Invalid email address" }),
  message: z.string().min(10, { message: "Message must be at least 10 characters" })
});
---

<form id="contactForm" class="max-w-md mx-auto p-4 space-y-4">
  <div>
    <label for="name" class="block mb-2">Name</label>
    <input 
      type="text" 
      id="name" 
      name="name" 
      required 
      class="w-full p-2 border rounded"
      minlength="2"
    />
    <span id="nameError" class="text-red-500 text-sm hidden"></span>
  </div>

  <div>
    <label for="email" class="block mb-2">Email</label>
    <input 
      type="email" 
      id="email" 
      name="email" 
      required 
      class="w-full p-2 border rounded"
    />
    <span id="emailError" class="text-red-500 text-sm hidden"></span>
  </div>

  <div>
    <label for="message" class="block mb-2">Message</label>
    <textarea 
      id="message" 
      name="message" 
      required 
      minlength="10"
      class="w-full p-2 border rounded"
    ></textarea>
    <span id="messageError" class="text-red-500 text-sm hidden"></span>
  </div>

  <button 
    type="submit" 
    class="w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600"
  >
    Send Message
  </button>

  <div id="formStatus" class="text-center"></div>
</form>

<script>
document.getElementById('contactForm')?.addEventListener('submit', async (e) => {
  e.preventDefault();
  const form = e.target as HTMLFormElement;
  const formData = new FormData(form);
  const statusEl = document.getElementById('formStatus');

  // Reset previous errors
  ['name', 'email', 'message'].forEach(field => {
    const errorEl = document.getElementById(`${field}Error`);
    if (errorEl) errorEl.textContent = '';
    errorEl?.classList.add('hidden');
  });

  statusEl!.textContent = '';
  statusEl!.className = '';

  try {
    const response = await fetch('/api/send', {
      method: 'POST',
      body: formData
    });

    const result = await response.json();

    if (response.ok) {
      statusEl!.textContent = 'Message sent successfully!';
      statusEl!.className = 'text-green-500';
      form.reset();
    } else {
      statusEl!.textContent = result.error || 'Failed to send message';
      statusEl!.className = 'text-red-500';
    }
  } catch (error) {
    statusEl!.textContent = 'An error occurred. Please try again.';
    statusEl!.className = 'text-red-500';
  }
});
</script>